name: Release Workflow
env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

permissions: write-all

on:
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Generate Release notes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Use nodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run ESLint to check the code style
        run: yarn lint

      - name: Generate new release
        id: semantic-release
        uses: codfish/semantic-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Check for new release
        if: steps.semantic-release.outputs.new-release-published == 'false'
        run: |
          echo "::error ::There's no new release version."
          exit 1
